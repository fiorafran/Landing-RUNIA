---
import Button from '../ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  primaryCTA?: string;
  secondaryCTA?: string;
  primaryCTALink?: string;
  secondaryCTALink?: string;
  stats?: Array<{
    value: string;
    label: string;
    color?: 'primary' | 'secondary' | 'accent';
  }>;
  backgroundImage?: string;
  className?: string;
}

const {
  title = "Automatiz√° tu negocio con inteligencia artificial",
  subtitle = "Creamos chatbots con IA que automatizan tus procesos, reducen costos y escalan tu atenci√≥n al cliente sin esfuerzo.",
  primaryCTA = "Quiero automatizar mi negocio",
  secondaryCTA = "Ver demo",
  primaryCTALink = "#contact",
  secondaryCTALink = "#demo",
  stats = [
    { value: "24/7", label: "Atenci√≥n disponible", color: "primary" },
    { value: "80%", label: "Reducci√≥n de costos", color: "secondary" },
    { value: "5min", label: "Configuraci√≥n r√°pida", color: "accent" }
  ],
  backgroundImage,
  className = ""
} = Astro.props;

const colorClasses = {
  primary: "text-primary-600",
  secondary: "text-secondary-600", 
  accent: "text-accent-600"
};
---

<section id="hero" class={`relative overflow-hidden min-h-screen flex items-center ${className}`}>
  <!-- Enhanced Background -->
  <div class="absolute inset-0 bg-gradient-to-br from-neutral-50 via-white to-primary-50"></div>
  
  <!-- Animated Background Pattern -->
  <div class="absolute inset-0 bg-grid-pattern opacity-5 animate-float"></div>
  
  <!-- Gradient Overlay -->
  <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/50 to-transparent"></div>
  
  <!-- Background Image (optional) -->
  {backgroundImage && (
    <div class="absolute inset-0 bg-cover bg-center bg-no-repeat opacity-5" style={`background-image: url(${backgroundImage})`}></div>
  )}

  <div class="relative z-10 w-full section-padding">
    <div class="container-custom">
      <div class="text-center max-w-6xl mx-auto">
        <!-- Main Content -->
        <div class="mb-16">
          <!-- Badge -->
          <div class="inline-flex items-center px-4 py-2 bg-primary-100 text-primary-700 rounded-full text-sm font-medium mb-8 animate-fade-in">
            <span class="w-2 h-2 bg-primary-500 rounded-full mr-2 animate-pulse"></span>
            IA de √∫ltima generaci√≥n disponible
          </div>
          
          <!-- Title -->
          <h1 class="text-gradient mb-8 animate-fade-in text-5xl md:text-6xl lg:text-7xl font-bold leading-tight tracking-tight">
            {title}
          </h1>
          
          <!-- Subtitle -->
          <p class="text-xl md:text-2xl lg:text-3xl text-neutral-600 mb-12 max-w-5xl mx-auto leading-relaxed animate-slide-up font-light">
            {subtitle}
          </p>
          
          <!-- CTA Buttons -->
          <div class="flex flex-col sm:flex-row gap-6 justify-center items-center mb-20 animate-slide-up">
            <Button 
              variant="primary" 
              size="lg" 
              href={primaryCTALink}
              className="w-full sm:w-auto text-lg px-8 py-4 shadow-2xl hover:shadow-primary-500/25"
            >
              <span class="mr-2">üöÄ</span>
              {primaryCTA}
            </Button>
            
            <Button 
              variant="outline" 
              size="lg" 
              href={secondaryCTALink}
              className="w-full sm:w-auto text-lg px-8 py-4 border-2 hover:bg-white/80"
            >
              <span class="mr-2">‚ñ∂Ô∏è</span>
              {secondaryCTA}
            </Button>
          </div>
        </div>

        <!-- Enhanced Stats Section -->
        {stats && stats.length > 0 && (
          <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16 animate-slide-up">
            {stats.map((stat, index) => (
              <div class="text-center group relative">
                <div class="absolute inset-0 bg-gradient-to-br from-white to-neutral-50 rounded-2xl shadow-lg opacity-0 group-hover:opacity-100 transition-opacity duration-300 -z-10"></div>
                <div class="p-6 rounded-2xl transition-all duration-300 group-hover:scale-105">
                  <div class={`text-4xl md:text-5xl font-black mb-3 ${colorClasses[stat.color || 'primary']} group-hover:scale-110 transition-transform duration-300`}>
                    {stat.value}
                  </div>
                  <div class="text-neutral-600 font-semibold text-lg">
                    {stat.label}
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        <!-- Enhanced Scroll Indicator -->
        <div class="animate-bounce-gentle">
          <div class="flex flex-col items-center text-neutral-400 group cursor-pointer">
            <span class="text-sm mb-3 font-medium group-hover:text-primary-600 transition-colors duration-300">
              Descubr√≠ m√°s
            </span>
            <div class="w-8 h-12 border-2 border-neutral-300 rounded-full flex justify-center group-hover:border-primary-600 transition-colors duration-300">
              <div class="w-1 h-3 bg-neutral-400 rounded-full mt-2 animate-bounce group-hover:bg-primary-600 transition-colors duration-300"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Decorative Elements -->
  <div class="absolute top-20 left-10 w-32 h-32 bg-gradient-to-br from-primary-400 to-primary-600 rounded-full opacity-10 animate-float blur-xl"></div>
  <div class="absolute bottom-20 right-10 w-48 h-48 bg-gradient-to-br from-secondary-400 to-secondary-600 rounded-full opacity-10 animate-float-delayed blur-xl"></div>
  <div class="absolute top-1/2 left-5 w-24 h-24 bg-gradient-to-br from-accent-400 to-accent-600 rounded-full opacity-10 animate-float-slow blur-xl"></div>
  
  <!-- Floating Icons -->
  <div class="absolute top-1/4 right-20 text-6xl opacity-10 animate-float">ü§ñ</div>
  <div class="absolute bottom-1/4 left-20 text-4xl opacity-10 animate-float-delayed">‚ö°</div>
  <div class="absolute top-1/3 left-1/4 text-3xl opacity-10 animate-float-slow">üí¨</div>
</section>

<style>
  .bg-grid-pattern {
    background-image: 
      linear-gradient(rgba(0,0,0,0.05) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0,0,0,0.05) 1px, transparent 1px);
    background-size: 60px 60px;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(180deg); }
  }
  
  @keyframes float-delayed {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-15px) rotate(-180deg); }
  }
  
  @keyframes float-slow {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-10px) rotate(90deg); }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-float-delayed {
    animation: float-delayed 8s ease-in-out infinite;
  }
  
  .animate-float-slow {
    animation: float-slow 10s ease-in-out infinite;
  }
  
  .text-gradient {
    background: linear-gradient(135deg, #2563eb 0%, #10b981 50%, #f59e0b 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient-shift 3s ease-in-out infinite;
  }
  
  @keyframes gradient-shift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }
</style> 