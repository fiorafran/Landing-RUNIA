---
import Button from './Button.astro';

export interface Props {
  logo?: string;
  logoText?: string;
  className?: string;
}

const {
  logo,
  logoText = 'Chatbots IA',
  className = '',
} = Astro.props;

// Elementos de navegación
const navItems = [
  { label: 'Inicio', href: '#home' },
  { label: 'Soluciones', href: '#solutions' },
  { label: 'Por qué elegirnos', href: '#why-choose-us' },
  { label: 'Integraciones', href: '#integrations' },
  { label: 'Contacto', href: '#contact' }
];
---

<nav class={`bg-white/95 backdrop-blur-sm border-b border-neutral-200 sticky top-0 z-50 ${className}`}>
  <div class="container-custom px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex items-center">
        {logo ? (
          <img src={logo} alt={logoText} class="h-8 w-auto" />
        ) : (
          <a href="#home" class="text-xl font-bold text-gradient">
            {logoText}
          </a>
        )}
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        {navItems.map((item) => (
          <a
            href={item.href}
            class="text-neutral-600 hover:text-primary-600 transition-colors duration-200 font-medium"
          >
            {item.label}
          </a>
        ))}
        <Button variant="primary" size="sm">
          Empezar ahora
        </Button>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          class="text-neutral-600 hover:text-primary-600 transition-colors duration-200"
          aria-label="Abrir menú"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile Navigation -->
    <div id="mobile-menu" class="md:hidden hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t border-neutral-200">
        {navItems.map((item) => (
          <a
            href={item.href}
            class="block px-3 py-2 text-neutral-600 hover:text-primary-600 hover:bg-neutral-50 rounded-md transition-colors duration-200 font-medium"
          >
            {item.label}
          </a>
        ))}
        <div class="px-3 py-2">
          <Button variant="primary" size="sm" className="w-full">
            Empezar ahora
          </Button>
        </div>
      </div>
    </div>
  </div>
</nav>

<script>
  // Toggle mobile menu
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isHidden = mobileMenu.classList.contains('hidden');
      
      if (isHidden) {
        mobileMenu.classList.remove('hidden');
        mobileMenuButton.setAttribute('aria-label', 'Cerrar menú');
        // Cambiar icono a X
        mobileMenuButton.innerHTML = `
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        `;
      } else {
        mobileMenu.classList.add('hidden');
        mobileMenuButton.setAttribute('aria-label', 'Abrir menú');
        // Cambiar icono a hamburguesa
        mobileMenuButton.innerHTML = `
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        `;
      }
    });
  }

  // Smooth scroll para enlaces internos
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href'));
      
      if (target) {
        // Cerrar menú móvil si está abierto
        if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.add('hidden');
          if (mobileMenuButton) {
            mobileMenuButton.setAttribute('aria-label', 'Abrir menú');
            mobileMenuButton.innerHTML = `
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            `;
          }
        }

        // Smooth scroll
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script> 